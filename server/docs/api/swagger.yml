swagger: "2.0"
info:
  description: "An API for the Forest Service Intake Module"
  version: "0.1.0"
  title: "Forest Service Intake Module"
  license:
    name: "Open Source"
    url: "https://github.com/18F/fs-intake-module/LICENSE.md"
basePath: "/"
schemes:
- "http"
paths:
  /permits/applications/special-uses/noncommercial/{id}:
    get:
      tags:
      - "noncommercial"
      summary: "Retrieve an existing noncommercial application"
      description: "Retrieve an existing noncommercial application using the application control number"
      operationId: "getNoncommApp"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "id"
        description: "Control Number"
        required: true
        type: "uuid"
      responses:
        200:
          description: "Successful"
        400:
          description: "Invalid input or other error"
        404:
          description: "Application not found"
    put:
      tags:
      - "noncommercial"
      summary: "Update an existing noncommercial application"
      description: "Update an existing noncommercial application"
      operationId: "updateNoncommApp"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "id"
        description: "Control Number"
        required: true
        type: "uuid"
      - in: "body"
        name: "body"
        description: "A non-commercial application object"
        required: true
        schema:
          $ref: "#/definitions/noncommercialApplication"
      responses:
        200:
          description: "Successful"
        400:
          description: "Invalid input or other error"
        404:
          description: "Application not found"
  /permits/applications/special-uses/noncommercial:
    get:
      tags:
      - "noncommercial"
      summary: "Retrieve all existing non-commercial applications"
      description: "Retrieves all existing non-commerical applications."
      operationId: "getAllNoncommApp"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
    post:
      tags:
      - "noncommercial"
      summary: "Creates a new non-commercial application"
      description: "Creates a new non-commercial application"
      operationId: "createNoncommercialTempApp"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "A non-commercial application object"
        required: true
        schema:
          $ref: "#/definitions/noncommercialApplication"
      responses:
        400:
          description: "Validation error"
        500:
          description: "General server error"
        201:
          description: "Successful Creation"
  /permits/applications/special-uses/temp-outfitter:
    post:
      tags:
      - "temp-outfitter"
      summary: "Creates a new temp outfitter application"
      description: "Creates a new temp outfitter application"
      operationId: "createTempOutfitterApp"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "A temp outfitter application object"
        required: true
        schema:
          $ref: "#/definitions/tempOutfitterApp"
      responses:
        400:
          description: "Validation error"
        500:
          description: "General server error"
        201:
          description: "Successful Creation"
  /permits/applications/special-uses/temp-outfitter/file:
    post:
      tags:
      - "temp-outfitter"
      summary: "Uploads an associated file for an application"
      description: "Uploads an associated file for an application"
      operationId: "createAppFile"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "File Association object"
        required: true
        schema:
          $ref: "#/definitions/File"
      - in: "formData"
        name: "file"
        description: "Binary file sent in as a multi-part form field called 'file'"
        required: true
        type: "file"
      responses:
        500:
          description: "General Error"
        201:
          description: "Successful Creation"
  /permits/applications/special-uses/temp-outfitter/{id}:
    get:
      tags:
      - "temp-outfitter"
      summary: "Retrieve an existing temp outfitter application"
      description: "Retrieve an existing temp outfitter application using the application control number"
      operationId: "getTempOutfitterApp"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "id"
        description: "Control Number"
        required: true
        type: "uuid"
      responses:
        200:
          description: "Successful"
        400:
          description: "Invalid input or other error"
        404:
          description: "Application not found"
  /uptime:
    get:
      tags:
      - "general"
      summary: "displays the uptime of the server"
      description: "displays the uptime of the server"
      operationId: "uptime"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful"
definitions:
  File:
    type: "object"
    required:
    - "originalFileName"
    properties:
      applicationId:
        type: "integer"
        format: "int64"
      applicationType:
        type: "string"
      s3FileName:
        type: "string"
      originalFileName:
        type: "string"
        example: "example.jpg"
  common:
    type: "object"
    properties:
      region:
        type: "string"
        maxLength: 2
      forest:
        type: "string"
        maxLength: 2
      district:
        type: "string"
        maxLength: 2
      authorizingOfficerName:
        type: "string"
      authorizingOfficerTitle:
        type: "string"
      type:
        type: "string"
      signature:
        type: "string"
        maxLength: 3
      reasonForReturn:
        type: "string"
  address:
    type: "object"
    properties:
      mailingAddress:
        type: "string"
      mailingAddress2:
        type: "string"
      mailingCity:
        type: "string"
      mailingState:
        type: "string"
        maxLength: 2
      mailingZIP:
        type: "string"
        maxLength: 5
  phone:
    type: "object"
    properties:
      areaCode:
        type: "string"
        maxLength: 3
      prefix:
        type: "string"
        maxLength: 3
      number:
        type: "string"
        maxLength: 4
      extension:
        type: "string"
        maxLength: 10
  commonApplicantInfo:
    type: "object"
    properties:
      primaryFirstName:
        type: "string"
      primaryLastName:
        type: "string"
      dayPhone:
        $ref: '#/definitions/phone'
      eveningPhone:
        $ref: '#/definitions/phone'
      emailAddress:
        type: "string"
      primaryAddress:
        $ref: '#/definitions/address'
      organizationName:
        type: "string"
      website:
        type: "string"
      orgType:
        type: "string"
  tempOutfitterApplicantInfo:
    allOf:
    - $ref: '#/definitions/commonApplicantInfo'
    - type: "object"
      properties:
        faxNumber:
          $ref: '#/definitions/phone'
  noncommApplicantInfo:
    allOf:
    - $ref: '#/definitions/commonApplicantInfo'
    - type: "object"
      properties:
        organizationAddress:
          $ref: '#/definitions/address'
        secondaryAddress:
          $ref: '#/definitions/address'
        secondaryFirstName:
          type: "string"
        secondaryLastName:
          type: "string"
  dateTimeRange:
    type: "object"
    properties:
      endDateTime:
        type: "string"
      startDateTime:
        type: "string"
  activityDescriptionFields:
    type: "object"
    properties:
      numberServiceDaysRequested:
        type: "string"
      numberOfTrips:
        type: "string"
      dateTimeRange:
        $ref: '#/definitions/dateTimeRange'
      locationDescription:
        type: "string"
      servicesProvided:
        type: "string"
      audienceDescription:
        type: "string"
      listOfGovernmentFacilities:
        type: "string"
      listOfTemporaryImprovements:
        type: "string"
      statementOfMotorizedEquipment:
        type: "string"
      statementOfTransportationOfLivestock:
        type: "string"
      statementOfAssignedSite:
        type: "string"
      descriptionOfCleanupAndRestoration:
        type: "string"
  tempOutfitterFields:
    type: "object"
    properties:
      individualIsCitizen:
        type: "boolean"
      smallBusiness:
        type: "boolean"
      advertisingURL:
        type: "string"
      advertisingDescription:
        type: "string"
      clientCharges:
        type: "string"
      experienceList:
        type: "string"
      activityDescriptionFields:
        $ref: '#/definitions/activityDescriptionFields'
  noncommFields:
    type: "object"
    properties:
      activityDescription:
        type: "string"
        maxLength: 512
      locationDescription:
        type: "string"
      dateTimeRange:
        $ref: '#/definitions/dateTimeRange'
      numberParticipants:
        type: "integer"
      spectators:
        type: "integer"
  tempOutfitterApp:
    allOf:
    - $ref: '#/definitions/common'
    - type: "object"
      properties:
        applicantInfo:
          $ref: '#/definitions/tempOutfitterApplicantInfo'
        tempOutfitterFields:
          $ref: '#/definitions/tempOutfitterFields'
  noncommercialApplication:
    allOf:
    - $ref: '#/definitions/common'
    - type: "object"
      properties:
        applicantInfo:
          $ref: '#/definitions/noncommApplicantInfo'
        noncommercialFields:
          $ref: '#/definitions/noncommFields'
externalDocs:
  description: "Find out more about Forest Service"
  url: "https://www.fs.fed.us/"
